#!/usr/bin/env guile
!#

; Test "Sweet"

; We assume that GUILE_LOAD_PATH is set correctly, so we don't need to do:
; (cond-expand
;   (guile-2
;     (eval-when (compile load eval)
;       (set! %load-path (append %load-path '("..")))))
;   (guile
;     (set! %load-path (append %load-path '("..")))))


(use-modules (readable sweet-impl))

(define sweet-test-error 0)
(define sweet-test-correct 0)

; Load a test file, which should have pairs of these:
;    s-expr (correct answer)
;    sweet-expression (which should match it)
(define (sweet-test port)
    (let ((correct (read port)))
      (cond
	((eof-object? correct)
            (display "TEST COMPLETE\n")
            (display "Correct answers:  ")
            (display sweet-test-correct)
            (display " test errors: ")
            (display sweet-test-error)
            (newline)
            (if (= sweet-test-error 0)
              (exit 0)
              (exit 3))
	    #t)
	(#t
	  (let ((sweet-value (sweet-read port)))
            (cond
              ((equal? correct sweet-value)
                (set! sweet-test-correct (+ sweet-test-correct 1))
                (display "Correct for: ")
                (write correct)
                (newline))
              (#t
                (set! sweet-test-error (+ sweet-test-error 1))
                (display "\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ERROR \n")
                (display " Should be:")
                (write correct)
                (display "\n Got: ")
                (write sweet-value)
                (newline))))
	  (sweet-test port)))))

(set! sweet-test-correct 0)
(set! sweet-test-error 0)
(sweet-test (current-input-port))

