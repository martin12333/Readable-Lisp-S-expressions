; Tests for unsweeten.
xyz
simplelist()
a()
b()

; Simple comment, not preceded by blank line.

; Comment preceded by blank line.
x y z qq(xx)
m n o
E F g

define f(a) {2 * a}

   (define (f a) (* 2 a)) (define x 4)

#!/bin/sh This is a multiline comment
!#
#| This is a another hash comment. |#
#| This is a another multiline
   hash comment. |#
g(x)

#f()


 first second third
;back to
 working correctly

  indent-disabled

  indent-disabled1 indent-disabled2

  indent-disabled1   indent-disabled2     indent-disabled3

  initial-indents $ disable \\ processing

  indent-disabled
  indent-disabled-another
  ; Indented comments should be ignored
g 1 2
  ; Even if they occur after a normal line
h 3 4
 
p \\ q

n a b \\ sing sang sung
n a b \\ sing sang sung
 d e f
a $ b \\ c $ d
e f $ g h \\ i j $ k l
a b c $ d e f $ g h i \\ j k l $ m n o $ p q r \\ s t u $ v w x $ y z zz

    (define (f a) (* 2 a)) (define x 4)

a \\ b

a
\\
b


\\ a
\\ b
\\ c

(f a)
(g x)

; This BEGINS with an indent
 f(a) g(x)

! a! b

; Non-Common Lisp
#'(a b)

|.|


; initial-indent tests

  a1 #; hi b1

  a2 #; hi #; bye b2  #; zz #; zz2

  a3 #;hi #|ugly|# b3  #;zz #|ugly2|#

  a4 #|junk|##|junk2|# b4 #|junk3|##|junk4|#  

1

; terminating whitespace tests
foo1    foo2   
  bar1    bar2  
  car1    car2    <*   a1    a2   *>   <*  b1  b2  *>  
  $    c1  c2   
  \\      
  \\   d1  d2   
  \\  
     e1  e2   

; Errors
a(b)WRONG

c(d)

x'y

#\NOT-A-VALID-CHARNAME

*>

x #;

#;

$$$

<*
   bad-initial-indent

<*
bad-datum-after-ff-in-collecting-list

bad-datum-after-ff


. x y

aa . bb cc

dd .

vertical-dot-test
  aa
  .
  bb
  cc


aa
  bb cc \\

$  

'  

bad-indentation-example
     hello
  partial-indent-invalid


fin

; Comment at end of file.
