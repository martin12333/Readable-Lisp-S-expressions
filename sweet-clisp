#!/bin/sh
# sweet-clisp [clisp-options] [FILE-TO-RUN.slisp [args]]

# By David A. Wheeler. Start up clisp in "sweet-expression" reading mode,
# so you can try it out.  A useful "clisp-option" is "-modern".
# This sets *print-escape*; this isn't ideal, but
# in most circumstances it works well, and clisp has no better way
# of disabling its unnecessary escapes which otherwise look ugly.

# If you want to use un-installed sweet-expression implementation, you
# need to set CL_SOURCE_REGISTRY to point to it.  E.G.:
#    CL_SOURCE_REGISTRY="$PWD" ./sweet-clisp ...

clisp_options=""

setup_commands='
(require "asdf")
(asdf:load-system :readable)
(setq *print-escape* nil)
(readable:enable-sweet)
'

while [ $# -gt 0 ]
do
  case "$1" in
    (-B|-K|-M|-m|-L|-N|-p|-lp|-i|-c|-o|-x)
      # Options with parameters.
      clisp_options="$clisp_options $1 $2"
      shift ; shift ;;
    (-*)
      # Options without parameters, e.g., "-modern".
      clisp_options="$clisp_options $1"
      shift ;;
    (*)
      break 2 ;;
  esac
done

if [ $# -gt 0 ] ; then

  origfile="$1"
  shift

  commandfile="$(mktemp)"
  printf "$setup_commands" > "$commandfile"
  cat -- "$origfile" >> "$commandfile"

  clisp --quiet --quiet $clisp_options "$commandfile" "$@"

  # Clean up.
  rm -fr "$commandfile"

else

  clisp $clisp_options -x "$setup_commands" -repl

fi

